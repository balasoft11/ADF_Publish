{
	"name": "dfdatafromsql",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "dbtarget",
						"type": "DatasetReference"
					},
					"name": "datafromazuresql"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "DelimitedText3",
						"type": "DatasetReference"
					},
					"name": "sink1",
					"rejectedDataLinkedService": {
						"referenceName": "lsblob",
						"type": "LinkedServiceReference"
					}
				}
			],
			"transformations": [
				{
					"name": "derivedColumn1"
				},
				{
					"name": "select1"
				}
			],
			"scriptLines": [
				"source(output(",
				"          EMPLOYEE_ID as integer,",
				"          FIRST_NAME as string,",
				"          LAST_NAME as string,",
				"          EMAIL as string,",
				"          PHONE_NUMBER as integer,",
				"          HIRE_DATE as timestamp,",
				"          JOB_ID as string,",
				"          SALARY as string,",
				"          COMMISSION_PCT as string,",
				"          MANAGER_ID as string,",
				"          DEPARTMENT_ID as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     inferDriftedColumnTypes: true,",
				"     isolationLevel: 'READ_UNCOMMITTED',",
				"     format: 'table',",
				"     partitionBy('hash', 1)) ~> datafromazuresql",
				"datafromazuresql derive(lastupdateddate = currentUTC()) ~> derivedColumn1",
				"derivedColumn1 select(mapColumn(",
				"          EMPLOYEE_ID,",
				"          FIRST_NAME,",
				"          LAST_NAME,",
				"          EMAIL,",
				"          JOB_ID,",
				"          SALARY,",
				"          COMMISSION_PCT,",
				"          MANAGER_ID,",
				"          DEPARTMENT_ID,",
				"          lastupdateddate",
				"     ),",
				"     partitionBy('hash', 1),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> select1",
				"select1 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     input(",
				"          Date as string,",
				"          Country as string,",
				"          {Price in US Dollars} as string",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> sink1"
			]
		}
	}
}